1) ./install.sh -d /home/SPECcpu2017
2) *_2017.cfg  (Intel binary)
3) cd /home/SPCcpu2017
   . ./shrc    # source  cshrc
4) runcpu -c *_2017.cfg -C 64  intrate --output_format all

5) . ./shrc
   . ./numa-detection.sh
   ulimit -s unlimited   
   a=`cat /proc/cpuinfo | grep processor | wc -l`
   rm -rf topo.txt
   specperl nhmtopology.pl
   b=`cat topo.txt`
   c=`expr $a / 2`
   rm -Rf $SPEC/benchspec/CPU/*/run/*
   sync
   config="xxx.cfg"

   numactl --interleave=all runcpu --nobuild --action validate --define default-platform-flags --define numcopies=$a -c ${config} --define smt-on --define cores=$c  --define $b --define invoke_with_interleave --define drop_caches --tune base -o all --noreportable -n  1  intrate
   sleep 60
   rm -Rf $SPEC/benchspec/CPU/*/run/*
   echo 1 > /proc/sys/vm/drop_caches

   ptat start: 
        modprobe msr
        insmod /XXX/tools/ptat/XXX/driver/ptusys/ptusys.ko
        /XXX/tools/ptat/XXX/ptat -i 5000000 -filter 0x3f -y -ts -csv -log -logdir . &
        注: 0x3f = 0011 1111 表示只采集bit0~bit5的数据（CPU & Memory）
   ptat stop:
        killall -r ptat
        mv *.csv  XXlog/

   numactl --interleave=all runcpu --define default-platform-flags --copies $d -c ${CONFIG} --define smt-on --define cores=$c --define $b --define invoke_with_interleave --define drop_caches
 --use_submit_for_compare --tune base -o all ${BENCHMARK}
---------------------------------------------------------------------------
重新编译spccpu
X) 一定要reportable,不能加noreportable
Y）compile的flag注意，sysinfo_program = specperl $[top]/config/sysinfo.revXXXX
不加-f时，default的notes_plat_sysinfo_000~350不要编辑
Z) mkdir /shXX.XX
   cp -a -p /home/memory/speccpu/shXX.XX/* /shXX.XX

1)安装编译器 iccXXXX install （glibc-devel-static相关包可能也要装，32位64位最好都装下）
2)为了加快编译速度，尽可能用tmpfs
   /home/Benchmark/specccpu-XXX  -> /home/memory/speccpu(tmpfs)
   cd /home/memory/speccpu; ./install.sh
   mkdir /home/memory/speccpu/iccXXlib/
   cp -rp /opt/intel/compilers_and_libraries_XXX/linux/compiler/lib/ia32 /home/memory/speccpu/iccXXlib/
   cp -rp /opt/intel/compilers_and_libraries_XXX/linux/compiler/lib/intel64 /home/memory/speccpu/iccXXlib/
3) cfg文件制作
4) rebuild.sh执行（必须要有Default-Platform-Flags.xml和intel-XXX-offical-XXX64-revX.xml）   
   runspec --define invoke_with_interleave --define default-platform-flags -c cpuxx.cfg --define smt -a build int
5) cp -rp  /home/memory/speccpu /home/Benchmark/speccpu-build/
6) speccpu-build.tar.gz打包
7) *.gz -> 跳板机备份

source /opt/intel(替换)/bin/compilervars.sh  intel64(替换)
#source /opt/XXXX/bin/iccvars.sh intel64(替换)
#source /opt/XXXX/bin/ifortvars.sh intel64(替换)
         
